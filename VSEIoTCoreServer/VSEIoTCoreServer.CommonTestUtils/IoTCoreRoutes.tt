<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".gen.cs" #>


namespace VSEIoTCoreServer.CommonTestUtils
{
	public static partial class IoTCoreRoutes
	{
<#	
	var lines = File.ReadAllLines(this.Host.ResolvePath("IoTCoreRoutes.cs"));
	foreach(var line in lines.Where(e => e.Contains("public static string")))
	{
		var methodName = line.Replace("public static string", "").Trim().Split('(')[0];
		var methodArgs = string.Empty;
		var callArgs = string.Empty;
		if(!line.Contains("()"))
		{
			methodArgs = ", " + line.Split('(')[1].Split(')')[0];
			for(var i = 1; i < methodArgs.Split(' ').Length; i++)
			{
				var item = methodArgs.Split(' ')[i];
				var lastItem = methodArgs.Split(' ')[i-1];
				if(lastItem.Contains(",")) continue;
				callArgs += item + ",";
			}
			callArgs = callArgs.TrimEnd(',');
		}

		Write($"		public static string {methodName}(this string s{methodArgs}) => s + {methodName}({callArgs});{Environment.NewLine}");
	}
#>

	}
}